{"ast":null,"code":"import { api } from '@/config/site.config';\nimport { createBrowserHistory } from 'history';\nimport AuthService from '@/services/auth.service';\nconst history = createBrowserHistory(); // Request interceptor\n\napi.interceptors.request.use(config => {\n  const user = AuthService.getCurrentUser();\n\n  if (user != null && user.token != null) {\n    config.headers.Authorization = `Bearer ${user.token}`;\n  }\n\n  return config;\n}, err => {\n  return Promise.reject(err);\n}); // Response interceptor\n\napi.interceptors.response.use(response => {\n  if (typeof response.data.status !== 'undefined') {\n    if (response.data.status === 'Token is Expired') {\n      // alert('Por favor inicia sesión de nuevo.')\n      AuthService.logout();\n    }\n  }\n\n  if (typeof response.data.success !== 'undefined' && response.data.message === 'No Autorizado') {\n    // alert('Por favor inicia sesión de nuevo.')\n    AuthService.logout();\n  }\n\n  return response;\n}, err => {\n  if (err.response) {\n    if (err.response.status === 401) {\n      AuthService.logout();\n      let public_url = '';\n\n      if (typeof process.env.PUBLIC_URL !== 'undefined') {\n        public_url = process.env.PUBLIC_URL;\n      } else {\n        if (typeof process.env.VUE_APP_PUBLIC_URL !== 'undefined') {\n          public_url = process.env.VUE_APP_PUBLIC_URL;\n        }\n      }\n\n      history.push({\n        pathname: public_url + '/login'\n      });\n      window.location.reload();\n    } else if (err.response.status === 405 || err.response.status === 500) {// alert('Hubo un error con su pedido.')\n    } else {// alert('Error de conexión, por favor trata de nuevo.')\n    }\n  } else {// alert('Error de conexión, por favor trata de nuevo.')\n  }\n\n  return Promise.reject(err);\n});","map":{"version":3,"sources":["C:/Users/JELOSKA ISABEL/Documents/wild-souls/Wild-Souls/src/utility/axios-token-interceptor.js"],"names":["api","createBrowserHistory","AuthService","history","interceptors","request","use","config","user","getCurrentUser","token","headers","Authorization","err","Promise","reject","response","data","status","logout","success","message","public_url","process","env","PUBLIC_URL","VUE_APP_PUBLIC_URL","push","pathname","window","location","reload"],"mappings":"AAAA,SAASA,GAAT,QAAoB,sBAApB;AACA,SAASC,oBAAT,QAAqC,SAArC;AACA,OAAOC,WAAP,MAAwB,yBAAxB;AAEA,MAAMC,OAAO,GAAGF,oBAAoB,EAApC,C,CACA;;AACAD,GAAG,CAACI,YAAJ,CAAiBC,OAAjB,CAAyBC,GAAzB,CACGC,MAAD,IAAY;AACV,QAAMC,IAAI,GAAGN,WAAW,CAACO,cAAZ,EAAb;;AACA,MAAID,IAAI,IAAI,IAAR,IAAgBA,IAAI,CAACE,KAAL,IAAc,IAAlC,EAAwC;AACtCH,IAAAA,MAAM,CAACI,OAAP,CAAeC,aAAf,GAAgC,UAASJ,IAAI,CAACE,KAAM,EAApD;AACD;;AACD,SAAOH,MAAP;AACD,CAPH,EAQGM,GAAD,IAAS;AACP,SAAOC,OAAO,CAACC,MAAR,CAAeF,GAAf,CAAP;AACD,CAVH,E,CAaA;;AACAb,GAAG,CAACI,YAAJ,CAAiBY,QAAjB,CAA0BV,GAA1B,CACGU,QAAD,IAAc;AACZ,MAAI,OAAOA,QAAQ,CAACC,IAAT,CAAcC,MAArB,KAAgC,WAApC,EAAiD;AAC/C,QAAIF,QAAQ,CAACC,IAAT,CAAcC,MAAd,KAAyB,kBAA7B,EAAiD;AAC/C;AACAhB,MAAAA,WAAW,CAACiB,MAAZ;AACD;AACF;;AACD,MAAI,OAAOH,QAAQ,CAACC,IAAT,CAAcG,OAArB,KAAiC,WAAjC,IAAgDJ,QAAQ,CAACC,IAAT,CAAcI,OAAd,KAA0B,eAA9E,EAA+F;AAC7F;AACAnB,IAAAA,WAAW,CAACiB,MAAZ;AACD;;AACD,SAAOH,QAAP;AACD,CAbH,EAcGH,GAAD,IAAS;AACP,MAAIA,GAAG,CAACG,QAAR,EAAkB;AAChB,QAAIH,GAAG,CAACG,QAAJ,CAAaE,MAAb,KAAwB,GAA5B,EAAiC;AAC/BhB,MAAAA,WAAW,CAACiB,MAAZ;AACA,UAAIG,UAAU,GAAG,EAAjB;;AACA,UAAI,OAAOC,OAAO,CAACC,GAAR,CAAYC,UAAnB,KAAkC,WAAtC,EAAmD;AACjDH,QAAAA,UAAU,GAAGC,OAAO,CAACC,GAAR,CAAYC,UAAzB;AACD,OAFD,MAEO;AACL,YAAI,OAAOF,OAAO,CAACC,GAAR,CAAYE,kBAAnB,KAA0C,WAA9C,EAA2D;AACzDJ,UAAAA,UAAU,GAAGC,OAAO,CAACC,GAAR,CAAYE,kBAAzB;AACD;AACF;;AACDvB,MAAAA,OAAO,CAACwB,IAAR,CAAa;AAAEC,QAAAA,QAAQ,EAAEN,UAAU,GAAG;AAAzB,OAAb;AACAO,MAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB;AACD,KAZD,MAYO,IAAIlB,GAAG,CAACG,QAAJ,CAAaE,MAAb,KAAwB,GAAxB,IAA+BL,GAAG,CAACG,QAAJ,CAAaE,MAAb,KAAwB,GAA3D,EAAgE,CACrE;AACD,KAFM,MAEA,CACL;AACD;AACF,GAlBD,MAkBO,CACL;AACD;;AACD,SAAOJ,OAAO,CAACC,MAAR,CAAeF,GAAf,CAAP;AACD,CArCH","sourcesContent":["import { api } from '@/config/site.config';\r\nimport { createBrowserHistory } from 'history';\r\nimport AuthService from '@/services/auth.service';\r\n\r\nconst history = createBrowserHistory();\r\n// Request interceptor\r\napi.interceptors.request.use(\r\n  (config) => {\r\n    const user = AuthService.getCurrentUser();\r\n    if (user != null && user.token != null) {\r\n      config.headers.Authorization = `Bearer ${user.token}`;\r\n    }\r\n    return config;\r\n  },\r\n  (err) => {\r\n    return Promise.reject(err);\r\n  },\r\n);\r\n\r\n// Response interceptor\r\napi.interceptors.response.use(\r\n  (response) => {\r\n    if (typeof response.data.status !== 'undefined') {\r\n      if (response.data.status === 'Token is Expired') {\r\n        // alert('Por favor inicia sesión de nuevo.')\r\n        AuthService.logout();\r\n      }\r\n    }\r\n    if (typeof response.data.success !== 'undefined' && response.data.message === 'No Autorizado') {\r\n      // alert('Por favor inicia sesión de nuevo.')\r\n      AuthService.logout();\r\n    }\r\n    return response;\r\n  },\r\n  (err) => {\r\n    if (err.response) {\r\n      if (err.response.status === 401) {\r\n        AuthService.logout();\r\n        let public_url = '';\r\n        if (typeof process.env.PUBLIC_URL !== 'undefined') {\r\n          public_url = process.env.PUBLIC_URL;\r\n        } else {\r\n          if (typeof process.env.VUE_APP_PUBLIC_URL !== 'undefined') {\r\n            public_url = process.env.VUE_APP_PUBLIC_URL;\r\n          }\r\n        }\r\n        history.push({ pathname: public_url + '/login' });\r\n        window.location.reload();\r\n      } else if (err.response.status === 405 || err.response.status === 500) {\r\n        // alert('Hubo un error con su pedido.')\r\n      } else {\r\n        // alert('Error de conexión, por favor trata de nuevo.')\r\n      }\r\n    } else {\r\n      // alert('Error de conexión, por favor trata de nuevo.')\r\n    }\r\n    return Promise.reject(err);\r\n  },\r\n);\r\n"]},"metadata":{},"sourceType":"module"}