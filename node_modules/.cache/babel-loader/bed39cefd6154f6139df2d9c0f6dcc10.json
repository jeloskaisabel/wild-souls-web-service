{"ast":null,"code":"import { Form, Field, ErrorMessage } from 'vee-validate';\nimport { toFormValidator } from '@vee-validate/zod';\nimport { z } from 'zod';\nimport { api } from '@/config/site.config.js';\nexport default {\n  name: 'RegisterComponent',\n\n  data() {\n    const schema = toFormValidator(z.object({\n      name: z.string({\n        required_error: 'Requerido'\n      }).nonempty(),\n      lastname: z.string({\n        required_error: 'Requerido'\n      }).nonempty(),\n      email: z.string({\n        required_error: 'Requerido'\n      }).nonempty(),\n      password: z.string({\n        required_error: 'Requerido'\n      }).nonempty(),\n      repeat_password: z.string({\n        required_error: 'Requerido'\n      }).nonempty()\n    }).refine(data => data.password === data.repeat_password, {\n      message: 'Las contraseñas no coinciden.',\n      path: ['repeat_password']\n    }));\n    return {\n      loading: false,\n      message: '',\n      schema\n    };\n  },\n\n  methods: {\n    onSubmit(user) {\n      api.post('auth/register', user).then(response => {\n        if (response.data.success) {\n          this.message = 'Registro exitoso';\n        } else {\n          this.message = 'Hubo un problema con su registro';\n        }\n      }).catch(error => console.log(error));\n    }\n\n  },\n  computed: {},\n  watch: {},\n\n  created() {},\n\n  mounted() {},\n\n  components: {\n    Form,\n    Field,\n    ErrorMessage\n  } // Se pueden utilizar estos hooks para el ciclo de vida\n  // beforeCreate, created, beforeMount, mounted, beforeUpdate, updated\n  // activated, deactivated, beforeUnmount, unmounted\n\n};","map":{"version":3,"sources":["C:\\Users\\JELOSKA ISABEL\\Documents\\wild-souls\\Wild-Souls\\src\\pages\\auth\\Register.vue"],"names":[],"mappings":"AA8CA,SAAS,IAAT,EAAe,KAAf,EAAsB,YAAtB,QAA0C,cAA1C;AACA,SAAS,eAAT,QAAgC,mBAAhC;AACA,SAAS,CAAT,QAAkB,KAAlB;AACA,SAAS,GAAT,QAAoB,yBAApB;AAEA,eAAe;AACb,EAAA,IAAI,EAAE,mBADO;;AAEb,EAAA,IAAI,GAAG;AACL,UAAM,MAAK,GAAI,eAAe,CAC5B,CAAA,CACG,MADH,CACU;AACN,MAAA,IAAI,EAAE,CAAC,CAAC,MAAF,CAAS;AAAE,QAAA,cAAc,EAAE;AAAlB,OAAT,EAA0C,QAA1C,EADA;AAEN,MAAA,QAAQ,EAAE,CAAC,CAAC,MAAF,CAAS;AAAE,QAAA,cAAc,EAAE;AAAlB,OAAT,EAA0C,QAA1C,EAFJ;AAGN,MAAA,KAAK,EAAE,CAAC,CAAC,MAAF,CAAS;AAAE,QAAA,cAAc,EAAE;AAAlB,OAAT,EAA0C,QAA1C,EAHD;AAIN,MAAA,QAAQ,EAAE,CAAC,CAAC,MAAF,CAAS;AAAE,QAAA,cAAc,EAAE;AAAlB,OAAT,EAA0C,QAA1C,EAJJ;AAKN,MAAA,eAAe,EAAE,CAAC,CAAC,MAAF,CAAS;AAAE,QAAA,cAAc,EAAE;AAAlB,OAAT,EAA0C,QAA1C;AALX,KADV,EAQG,MARH,CAQW,IAAD,IAAU,IAAI,CAAC,QAAL,KAAkB,IAAI,CAAC,eAR3C,EAQ4D;AACxD,MAAA,OAAO,EAAE,+BAD+C;AAExD,MAAA,IAAI,EAAE,CAAC,iBAAD;AAFkD,KAR5D,CAD4B,CAA9B;AAcA,WAAO;AACL,MAAA,OAAO,EAAE,KADJ;AAEL,MAAA,OAAO,EAAE,EAFJ;AAGL,MAAA;AAHK,KAAP;AAKD,GAtBY;;AAuBb,EAAA,OAAO,EAAE;AACP,IAAA,QAAQ,CAAC,IAAD,EAAO;AACb,MAAA,GAAE,CACC,IADH,CACQ,eADR,EACyB,IADzB,EAEG,IAFH,CAES,QAAD,IAAc;AAClB,YAAI,QAAQ,CAAC,IAAT,CAAc,OAAlB,EAA2B;AACzB,eAAK,OAAL,GAAe,kBAAf;AACF,SAFA,MAEO;AACL,eAAK,OAAL,GAAe,kCAAf;AACF;AACD,OARH,EASG,KATH,CASU,KAAD,IAAW,OAAO,CAAC,GAAR,CAAY,KAAZ,CATpB;AAUD;;AAZM,GAvBI;AAqCb,EAAA,QAAQ,EAAE,EArCG;AAsCb,EAAA,KAAK,EAAE,EAtCM;;AAuCb,EAAA,OAAO,GAAG,CAAE,CAvCC;;AAwCb,EAAA,OAAO,GAAG,CAAE,CAxCC;;AAyCb,EAAA,UAAU,EAAE;AACV,IAAA,IADU;AAEV,IAAA,KAFU;AAGV,IAAA;AAHU,GAzCC,CA8Cb;AACA;AACA;;AAhDa,CAAf","sourcesContent":["<template>\r\n  <div>\r\n    <h1>Registro</h1>\r\n    <Form @submit=\"onSubmit\" class=\"needs-validation\" :validation-schema=\"schema\">\r\n      <div class=\"mb-3\">\r\n        <label for=\"name\" class=\"form-label\">Nombre</label>\r\n        <Field name=\"name\" type=\"text\" class=\"form-control\" />\r\n        <ErrorMessage name=\"name\" class=\"error-feedback\" />\r\n      </div>\r\n      <div class=\"mb-3\">\r\n        <label for=\"lastname\" class=\"form-label\">Apellido</label>\r\n        <Field name=\"lastname\" type=\"name\" class=\"form-control\" />\r\n        <ErrorMessage name=\"lastname\" class=\"error-feedback\" />\r\n      </div>\r\n      <div class=\"mb-3\">\r\n        <label for=\"email\" class=\"form-label\">Correo Electrónico</label>\r\n        <Field name=\"email\" type=\"email\" class=\"form-control\" />\r\n        <ErrorMessage name=\"email\" class=\"error-feedback\" />\r\n      </div>\r\n      <div class=\"mb-3\">\r\n        <label for=\"password\" class=\"form-label\">Contraseña</label>\r\n        <Field name=\"password\" type=\"password\" class=\"form-control\" />\r\n        <ErrorMessage name=\"password\" class=\"error-feedback\" />\r\n      </div>\r\n      <div class=\"mb-3\">\r\n        <label for=\"repeat_password\" class=\"form-label\">Repite tu contraseña</label>\r\n        <Field name=\"repeat_password\" type=\"password\" class=\"form-control\" />\r\n        <ErrorMessage name=\"repeat_password\" class=\"error-feedback\" />\r\n      </div>\r\n      <div class=\"mb-3\">\r\n        <button class=\"btn btn-primary btn-block\" :disabled=\"loading\">\r\n          <span v-show=\"loading\" class=\"spinner-border spinner-border-sm\"></span>\r\n          <span>Registrarme</span>\r\n        </button>\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <div v-if=\"message\" class=\"alert alert-danger\" role=\"alert\">\r\n          {{ message }}\r\n        </div>\r\n      </div>\r\n    </Form>\r\n    <div class=\"mb-3\"></div>\r\n    <div class=\"mb-3\"></div>\r\n  </div>\r\n</template>\r\n<script>\r\nimport { Form, Field, ErrorMessage } from 'vee-validate';\r\nimport { toFormValidator } from '@vee-validate/zod';\r\nimport { z } from 'zod';\r\nimport { api } from '@/config/site.config.js';\r\n\r\nexport default {\r\n  name: 'RegisterComponent',\r\n  data() {\r\n    const schema = toFormValidator(\r\n      z\r\n        .object({\r\n          name: z.string({ required_error: 'Requerido' }).nonempty(),\r\n          lastname: z.string({ required_error: 'Requerido' }).nonempty(),\r\n          email: z.string({ required_error: 'Requerido' }).nonempty(),\r\n          password: z.string({ required_error: 'Requerido' }).nonempty(),\r\n          repeat_password: z.string({ required_error: 'Requerido' }).nonempty(),\r\n        })\r\n        .refine((data) => data.password === data.repeat_password, {\r\n          message: 'Las contraseñas no coinciden.',\r\n          path: ['repeat_password'],\r\n        }),\r\n    );\r\n    return {\r\n      loading: false,\r\n      message: '',\r\n      schema,\r\n    };\r\n  },\r\n  methods: {\r\n    onSubmit(user) {\r\n      api\r\n        .post('auth/register', user)\r\n        .then((response) => {\r\n          if (response.data.success) {\r\n            this.message = 'Registro exitoso';\r\n          } else {\r\n            this.message = 'Hubo un problema con su registro';\r\n          }\r\n        })\r\n        .catch((error) => console.log(error));\r\n    },\r\n  },\r\n  computed: {},\r\n  watch: {},\r\n  created() {},\r\n  mounted() {},\r\n  components: {\r\n    Form,\r\n    Field,\r\n    ErrorMessage,\r\n  },\r\n  // Se pueden utilizar estos hooks para el ciclo de vida\r\n  // beforeCreate, created, beforeMount, mounted, beforeUpdate, updated\r\n  // activated, deactivated, beforeUnmount, unmounted\r\n};\r\n</script>\r\n\r\n<style scoped></style>\r\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}