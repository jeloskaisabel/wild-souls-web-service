{"ast":null,"code":"import { api } from '@/config/site.config';\nimport { storageGet, storageSave, storageDelete } from '@/services/storage';\n\nclass AuthService {\n  login(user) {\n    return api.post('auth/login', {\n      email: user.email,\n      password: user.password\n    }).then(response => {\n      if (response.data.success) {\n        storageSave('user', response.data);\n      }\n\n      return response.data;\n    });\n  }\n\n  getCurrentUser() {\n    return storageGet('user');\n  }\n\n  logout() {\n    storageDelete('user');\n  }\n\n  register(user) {\n    return api.post('auth/register', {\n      username: user.username,\n      email: user.email,\n      password: user.password\n    });\n  }\n\n}\n\nexport default new AuthService();","map":{"version":3,"sources":["C:/Users/JELOSKA ISABEL/Documents/wild-souls/Wild-Souls/src/services/auth.service.js"],"names":["api","storageGet","storageSave","storageDelete","AuthService","login","user","post","email","password","then","response","data","success","getCurrentUser","logout","register","username"],"mappings":"AAAA,SAASA,GAAT,QAAoB,sBAApB;AACA,SAASC,UAAT,EAAqBC,WAArB,EAAkCC,aAAlC,QAAuD,oBAAvD;;AAEA,MAAMC,WAAN,CAAkB;AAChBC,EAAAA,KAAK,CAACC,IAAD,EAAO;AACV,WAAON,GAAG,CACPO,IADI,CACC,YADD,EACe;AAClBC,MAAAA,KAAK,EAAEF,IAAI,CAACE,KADM;AAElBC,MAAAA,QAAQ,EAAEH,IAAI,CAACG;AAFG,KADf,EAKJC,IALI,CAKEC,QAAD,IAAc;AAClB,UAAIA,QAAQ,CAACC,IAAT,CAAcC,OAAlB,EAA2B;AACzBX,QAAAA,WAAW,CAAC,MAAD,EAASS,QAAQ,CAACC,IAAlB,CAAX;AACD;;AACD,aAAOD,QAAQ,CAACC,IAAhB;AACD,KAVI,CAAP;AAWD;;AAEDE,EAAAA,cAAc,GAAG;AACf,WAAOb,UAAU,CAAC,MAAD,CAAjB;AACD;;AAEDc,EAAAA,MAAM,GAAG;AACPZ,IAAAA,aAAa,CAAC,MAAD,CAAb;AACD;;AAEDa,EAAAA,QAAQ,CAACV,IAAD,EAAO;AACb,WAAON,GAAG,CAACO,IAAJ,CAAS,eAAT,EAA0B;AAC/BU,MAAAA,QAAQ,EAAEX,IAAI,CAACW,QADgB;AAE/BT,MAAAA,KAAK,EAAEF,IAAI,CAACE,KAFmB;AAG/BC,MAAAA,QAAQ,EAAEH,IAAI,CAACG;AAHgB,KAA1B,CAAP;AAKD;;AA7Be;;AAgClB,eAAe,IAAIL,WAAJ,EAAf","sourcesContent":["import { api } from '@/config/site.config';\r\nimport { storageGet, storageSave, storageDelete } from '@/services/storage';\r\n\r\nclass AuthService {\r\n  login(user) {\r\n    return api\r\n      .post('auth/login', {\r\n        email: user.email,\r\n        password: user.password,\r\n      })\r\n      .then((response) => {\r\n        if (response.data.success) {\r\n          storageSave('user', response.data);\r\n        }\r\n        return response.data;\r\n      });\r\n  }\r\n\r\n  getCurrentUser() {\r\n    return storageGet('user');\r\n  }\r\n\r\n  logout() {\r\n    storageDelete('user');\r\n  }\r\n\r\n  register(user) {\r\n    return api.post('auth/register', {\r\n      username: user.username,\r\n      email: user.email,\r\n      password: user.password,\r\n    });\r\n  }\r\n}\r\n\r\nexport default new AuthService();\r\n"]},"metadata":{},"sourceType":"module"}