{"ast":null,"code":"import { api } from '@/config/site.config';\nexport default {\n  name: 'CategoriaPage',\n  props: ['id'],\n\n  data() {\n    return {\n      userId: 24,\n      products: [],\n      productsRoutes: [],\n      categoryName: ''\n    };\n  },\n\n  methods: {\n    cargarProductos(id) {\n      api.get('categories/' + this.userId + '/products/' + id).then(response => {\n        this.products = response.data.products;\n      });\n    },\n\n    findCategory(id) {\n      api.get('categories/' + this.userId + '/getAll').then(response => {\n        for (let x in response.data.categories) {\n          if (response.data.categories[x].id == id) {\n            this.categoryName = response.data.categories[x].category_name;\n            console.log(this.categoryName);\n          }\n        }\n      });\n    }\n\n  },\n  computed: {},\n  watch: {},\n\n  created() {\n    this.$watch(() => this.$route.params, (toParams, previousParams) => {\n      console.log(previousParams);\n      this.cargarProductos(toParams.id);\n      this.findCategory(toParams.id);\n    });\n  },\n\n  mounted() {\n    window.scrollTo({\n      top: 0,\n      behavior: 'smooth'\n    });\n    this.cargarProductos(this.id);\n    api.get('categories/' + this.userId + '/products/' + this.id).then(response => {\n      for (let x in response.data.products) {\n        this.productsRoutes.push({\n          route: '/product/' + response.data.products[x].id\n        });\n      }\n    });\n    this.findCategory(this.id);\n  } // Se pueden utilizar estos hooks para el ciclo de vida\n  // beforeCreate, created, beforeMount, mounted, beforeUpdate, updated\n  // activated, deactivated, beforeUnmount, unmounted\n\n\n};","map":{"version":3,"sources":["C:\\Users\\JELOSKA ISABEL\\Documents\\wild-souls\\Wild-Souls\\src\\pages\\Categoria.vue"],"names":[],"mappings":"AAuCA,SAAS,GAAT,QAAoB,sBAApB;AAEA,eAAe;AACb,EAAA,IAAI,EAAE,eADO;AAEb,EAAA,KAAK,EAAE,CAAC,IAAD,CAFM;;AAGb,EAAA,IAAI,GAAG;AACL,WAAO;AACL,MAAA,MAAM,EAAE,EADH;AAEL,MAAA,QAAQ,EAAE,EAFL;AAGL,MAAA,cAAc,EAAE,EAHX;AAIL,MAAA,YAAY,EAAE;AAJT,KAAP;AAMD,GAVY;;AAWb,EAAA,OAAO,EAAE;AACP,IAAA,eAAe,CAAC,EAAD,EAAK;AAClB,MAAA,GAAG,CAAC,GAAJ,CAAQ,gBAAgB,KAAK,MAArB,GAA8B,YAA9B,GAA6C,EAArD,EAAyD,IAAzD,CAA+D,QAAD,IAAc;AAC1E,aAAK,QAAL,GAAgB,QAAQ,CAAC,IAAT,CAAc,QAA9B;AACD,OAFD;AAGD,KALM;;AAMP,IAAA,YAAY,CAAC,EAAD,EAAK;AACf,MAAA,GAAG,CAAC,GAAJ,CAAQ,gBAAgB,KAAK,MAArB,GAA8B,SAAtC,EAAiD,IAAjD,CAAuD,QAAD,IAAc;AAClE,aAAK,IAAI,CAAT,IAAc,QAAQ,CAAC,IAAT,CAAc,UAA5B,EAAwC;AACtC,cAAI,QAAQ,CAAC,IAAT,CAAc,UAAd,CAAyB,CAAzB,EAA4B,EAA5B,IAAkC,EAAtC,EAA0C;AACxC,iBAAK,YAAL,GAAoB,QAAQ,CAAC,IAAT,CAAc,UAAd,CAAyB,CAAzB,EAA4B,aAAhD;AACA,YAAA,OAAO,CAAC,GAAR,CAAY,KAAK,YAAjB;AACF;AACF;AACD,OAPD;AAQD;;AAfM,GAXI;AA4Bb,EAAA,QAAQ,EAAE,EA5BG;AA6Bb,EAAA,KAAK,EAAE,EA7BM;;AA8Bb,EAAA,OAAO,GAAG;AACR,SAAK,MAAL,CACE,MAAM,KAAK,MAAL,CAAY,MADpB,EAEE,CAAC,QAAD,EAAW,cAAX,KAA8B;AAC5B,MAAA,OAAO,CAAC,GAAR,CAAY,cAAZ;AACA,WAAK,eAAL,CAAqB,QAAQ,CAAC,EAA9B;AACA,WAAK,YAAL,CAAkB,QAAQ,CAAC,EAA3B;AACD,KANH;AAQD,GAvCY;;AAwCb,EAAA,OAAO,GAAG;AACR,IAAA,MAAM,CAAC,QAAP,CAAgB;AAAE,MAAA,GAAG,EAAE,CAAP;AAAU,MAAA,QAAQ,EAAE;AAApB,KAAhB;AACA,SAAK,eAAL,CAAqB,KAAK,EAA1B;AACA,IAAA,GAAG,CAAC,GAAJ,CAAQ,gBAAgB,KAAK,MAArB,GAA8B,YAA9B,GAA6C,KAAK,EAA1D,EAA8D,IAA9D,CAAoE,QAAD,IAAc;AAC/E,WAAK,IAAI,CAAT,IAAc,QAAQ,CAAC,IAAT,CAAc,QAA5B,EAAsC;AACpC,aAAK,cAAL,CAAoB,IAApB,CAAyB;AACvB,UAAA,KAAK,EAAE,cAAc,QAAQ,CAAC,IAAT,CAAc,QAAd,CAAuB,CAAvB,EAA0B;AADxB,SAAzB;AAGF;AACD,KAND;AAOA,SAAK,YAAL,CAAkB,KAAK,EAAvB;AACD,GAnDY,CAqDb;AACA;AACA;;;AAvDa,CAAf","sourcesContent":["<template>\r\n  <div class=\"row\" style=\"background-color: #be5a4b\">\r\n    <div class=\"col-12 category-hero\">\r\n      <div class=\"row\">\r\n        <div class=\"col-sm-6 py-5 category-title\" style=\"background-color: #be5a4b\"></div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"row\" style=\"background-color: #be5a4b\">\r\n    <div class=\"col-12\">\r\n      <div class=\"container\">\r\n        <div class=\"row\">\r\n          <div class=\"col-sm-6 p-0\">\r\n            <h1 class=\"d-none d-sm-block\" style=\"font-size: 8vh\">{{ categoryName }}</h1>\r\n            <h2 class=\"d-block d-sm-none\">{{ categoryName }}</h2>\r\n          </div>\r\n        </div>\r\n        <div class=\"row offset-md-2\">\r\n          <div v-for=\"(product, index) in products\" :key=\"index\" class=\"col-sm-12 col-md-6\">\r\n            <img\r\n              :src=\"product.product_image\"\r\n              class=\"img-fluid product-card-img\"\r\n              style=\"width: 390px; heigth: 550px\"\r\n            />\r\n            <div class=\"mt-2 p-3\">\r\n              <h3>{{ product.product_name }}</h3>\r\n              <p>{{ product.product_price }} Bs.</p>\r\n              <button class=\"btn-product-card\" style=\"background-color: #000\">\r\n                <router-link :to=\"'/product/' + product.id\">Ver Producto</router-link>\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n<script>\r\nimport { api } from '@/config/site.config';\r\n\r\nexport default {\r\n  name: 'CategoriaPage',\r\n  props: ['id'],\r\n  data() {\r\n    return {\r\n      userId: 24,\r\n      products: [],\r\n      productsRoutes: [],\r\n      categoryName: '',\r\n    };\r\n  },\r\n  methods: {\r\n    cargarProductos(id) {\r\n      api.get('categories/' + this.userId + '/products/' + id).then((response) => {\r\n        this.products = response.data.products;\r\n      });\r\n    },\r\n    findCategory(id) {\r\n      api.get('categories/' + this.userId + '/getAll').then((response) => {\r\n        for (let x in response.data.categories) {\r\n          if (response.data.categories[x].id == id) {\r\n            this.categoryName = response.data.categories[x].category_name;\r\n            console.log(this.categoryName);\r\n          }\r\n        }\r\n      });\r\n    },\r\n  },\r\n  computed: {},\r\n  watch: {},\r\n  created() {\r\n    this.$watch(\r\n      () => this.$route.params,\r\n      (toParams, previousParams) => {\r\n        console.log(previousParams);\r\n        this.cargarProductos(toParams.id);\r\n        this.findCategory(toParams.id);\r\n      },\r\n    );\r\n  },\r\n  mounted() {\r\n    window.scrollTo({ top: 0, behavior: 'smooth' });\r\n    this.cargarProductos(this.id);\r\n    api.get('categories/' + this.userId + '/products/' + this.id).then((response) => {\r\n      for (let x in response.data.products) {\r\n        this.productsRoutes.push({\r\n          route: '/product/' + response.data.products[x].id,\r\n        });\r\n      }\r\n    });\r\n    this.findCategory(this.id);\r\n  },\r\n\r\n  // Se pueden utilizar estos hooks para el ciclo de vida\r\n  // beforeCreate, created, beforeMount, mounted, beforeUpdate, updated\r\n  // activated, deactivated, beforeUnmount, unmounted\r\n};\r\n</script>\r\n\r\n<style scoped></style>\r\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}