{"ast":null,"code":"import { Form, Field, ErrorMessage } from 'vee-validate';\nimport { toFormValidator } from '@vee-validate/zod';\nimport { z } from 'zod';\nexport default {\n  name: 'LoginPage',\n\n  data() {\n    const schema = toFormValidator(z.object({\n      email: z.string({\n        required_error: 'El correo electrónico es un campo requerido.'\n      }).min(1, 'El correo electrónico es un campo requerido.'),\n      password: z.string({\n        required_error: 'La contraseña es un campo requerido.'\n      }).min(1, 'La contraseña es un campo requerido.')\n    }));\n    return {\n      loading: false,\n      message: '',\n      schema\n    };\n  },\n\n  methods: {\n    onSubmit(user) {\n      this.loading = true;\n      this.$store.dispatch('auth/login', user).then(() => this.$router.push('/'), error => {\n        this.loading = false;\n        this.message = error;\n      });\n    }\n\n  },\n  computed: {\n    loggedIn() {\n      return this.$store.state.auth.status.loggedIn;\n    }\n\n  },\n  watch: {},\n\n  created() {\n    if (this.loggedIn) {\n      this.$router.push('/');\n    }\n  },\n\n  mounted() {},\n\n  components: {\n    Form,\n    Field,\n    ErrorMessage\n  } // Se pueden utilizar estos hooks para el ciclo de vida\n  // beforeCreate, created, beforeMount, mounted, beforeUpdate, updated\n  // activated, deactivated, beforeUnmount, unmounted\n\n};","map":{"version":3,"sources":["C:\\Users\\JELOSKA ISABEL\\Documents\\wild-souls\\Wild-Souls\\src\\pages\\auth\\Login.vue"],"names":[],"mappings":"AAgCA,SAAS,IAAT,EAAe,KAAf,EAAsB,YAAtB,QAA0C,cAA1C;AACA,SAAS,eAAT,QAAgC,mBAAhC;AACA,SAAS,CAAT,QAAkB,KAAlB;AAEA,eAAe;AACb,EAAA,IAAI,EAAE,WADO;;AAEb,EAAA,IAAI,GAAG;AACL,UAAM,MAAK,GAAI,eAAe,CAC5B,CAAC,CAAC,MAAF,CAAS;AACP,MAAA,KAAK,EAAE,CAAA,CACJ,MADI,CACG;AAAE,QAAA,cAAc,EAAE;AAAlB,OADH,EAEJ,GAFI,CAEA,CAFA,EAEG,8CAFH,CADA;AAIP,MAAA,QAAQ,EAAE,CAAA,CACP,MADO,CACA;AAAE,QAAA,cAAc,EAAE;AAAlB,OADA,EAEP,GAFO,CAEH,CAFG,EAEA,sCAFA;AAJH,KAAT,CAD4B,CAA9B;AAUA,WAAO;AACL,MAAA,OAAO,EAAE,KADJ;AAEL,MAAA,OAAO,EAAE,EAFJ;AAGL,MAAA;AAHK,KAAP;AAKD,GAlBY;;AAmBb,EAAA,OAAO,EAAE;AACP,IAAA,QAAQ,CAAC,IAAD,EAAO;AACb,WAAK,OAAL,GAAe,IAAf;AACA,WAAK,MAAL,CAAY,QAAZ,CAAqB,YAArB,EAAmC,IAAnC,EAAyC,IAAzC,CACE,MAAM,KAAK,OAAL,CAAa,IAAb,CAAkB,GAAlB,CADR,EAEG,KAAD,IAAW;AACT,aAAK,OAAL,GAAe,KAAf;AACA,aAAK,OAAL,GAAe,KAAf;AACD,OALH;AAOD;;AAVM,GAnBI;AA+Bb,EAAA,QAAQ,EAAE;AACR,IAAA,QAAQ,GAAG;AACT,aAAO,KAAK,MAAL,CAAY,KAAZ,CAAkB,IAAlB,CAAuB,MAAvB,CAA8B,QAArC;AACD;;AAHO,GA/BG;AAoCb,EAAA,KAAK,EAAE,EApCM;;AAqCb,EAAA,OAAO,GAAG;AACR,QAAI,KAAK,QAAT,EAAmB;AACjB,WAAK,OAAL,CAAa,IAAb,CAAkB,GAAlB;AACF;AACD,GAzCY;;AA0Cb,EAAA,OAAO,GAAG,CAAE,CA1CC;;AA2Cb,EAAA,UAAU,EAAE;AACV,IAAA,IADU;AAEV,IAAA,KAFU;AAGV,IAAA;AAHU,GA3CC,CAgDb;AACA;AACA;;AAlDa,CAAf","sourcesContent":["<template>\r\n  <div>\r\n    <Form @submit=\"onSubmit\" :validation-schema=\"schema\" class=\"needs-validation\">\r\n      <div class=\"mb-3\">\r\n        <label for=\"email\" class=\"form-label\">Correo Electrónico</label>\r\n        <div class=\"input-group has-validation\">\r\n          <Field name=\"email\" type=\"email\" class=\"form-control\" />\r\n          <div class=\"invalid-feedback\">\r\n            <ErrorMessage as=\"div\" name=\"email\" class=\"error-feedback\" />\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"mb-3\">\r\n        <label for=\"password\">Contraseña</label>\r\n        <Field name=\"password\" type=\"password\" class=\"form-control\" />\r\n        <ErrorMessage name=\"password\" class=\"error-feedback\" />\r\n      </div>\r\n      <div class=\"mb-3\">\r\n        <button class=\"btn btn-primary btn-block\" :disabled=\"loading\">\r\n          <span v-show=\"loading\" class=\"spinner-border spinner-border-sm\"></span>\r\n          <span>Iniciar Sesión</span>\r\n        </button>\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <div v-if=\"message\" class=\"alert alert-danger\" role=\"alert\">\r\n          {{ message }}\r\n        </div>\r\n      </div>\r\n    </Form>\r\n  </div>\r\n</template>\r\n<script>\r\nimport { Form, Field, ErrorMessage } from 'vee-validate';\r\nimport { toFormValidator } from '@vee-validate/zod';\r\nimport { z } from 'zod';\r\n\r\nexport default {\r\n  name: 'LoginPage',\r\n  data() {\r\n    const schema = toFormValidator(\r\n      z.object({\r\n        email: z\r\n          .string({ required_error: 'El correo electrónico es un campo requerido.' })\r\n          .min(1, 'El correo electrónico es un campo requerido.'),\r\n        password: z\r\n          .string({ required_error: 'La contraseña es un campo requerido.' })\r\n          .min(1, 'La contraseña es un campo requerido.'),\r\n      }),\r\n    );\r\n    return {\r\n      loading: false,\r\n      message: '',\r\n      schema,\r\n    };\r\n  },\r\n  methods: {\r\n    onSubmit(user) {\r\n      this.loading = true;\r\n      this.$store.dispatch('auth/login', user).then(\r\n        () => this.$router.push('/'),\r\n        (error) => {\r\n          this.loading = false;\r\n          this.message = error;\r\n        },\r\n      );\r\n    },\r\n  },\r\n  computed: {\r\n    loggedIn() {\r\n      return this.$store.state.auth.status.loggedIn;\r\n    },\r\n  },\r\n  watch: {},\r\n  created() {\r\n    if (this.loggedIn) {\r\n      this.$router.push('/');\r\n    }\r\n  },\r\n  mounted() {},\r\n  components: {\r\n    Form,\r\n    Field,\r\n    ErrorMessage,\r\n  },\r\n  // Se pueden utilizar estos hooks para el ciclo de vida\r\n  // beforeCreate, created, beforeMount, mounted, beforeUpdate, updated\r\n  // activated, deactivated, beforeUnmount, unmounted\r\n};\r\n</script>\r\n\r\n<style scoped></style>\r\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}